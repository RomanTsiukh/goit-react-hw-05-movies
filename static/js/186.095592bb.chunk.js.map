{"version":3,"file":"static/js/186.095592bb.chunk.js","mappings":"8NAkCA,UA9BgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC4BC,EAAAA,EAAAA,IAAaH,GADzC,OACQI,EADR,OAEEL,EAAWK,GAFb,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACL,KAGF,wBACsB,IAAnBF,EAAQQ,OACPR,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,KAED,sEAIP,C,2MC9BKG,EAAU,mCACVC,EAAa,QAInBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAERD,IAAAA,IAAA,UANV,WAMU,YACND,EADM,YAPP,MAOO,oBAC+BD,IAHvB,cAEzBI,EAFyB,yBAKxBA,EAASC,KAAKC,SALU,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,qDAWnBC,EAAY,mCAAG,WAAMpB,GAAN,yFAElBqB,EAAKC,OAAOtB,GAFM,SAGDa,IAAAA,IAAA,UAAaD,EAAb,YAA2BS,EAA3B,oBAAyCV,IAHxC,cAGlBI,EAHkB,yBAIjBA,EAASC,MAJQ,gCAMxBE,QAAQC,IAAR,MANwB,yDAAH,sDAUZI,EAAS,mCAAG,WAAMvB,GAAN,gGAEEa,IAAAA,IAAA,UAClBD,EADkB,YACJZ,EADI,4BACuBW,IAHzB,cAEfI,EAFe,yBAKdA,EAASC,KAAKQ,MALA,gCAOrBN,QAAQC,IAAR,MAPqB,yDAAH,sDAWThB,EAAY,mCAAG,WAAMH,GAAN,gGAEDa,IAAAA,IAAA,UAClBD,EADkB,YACJZ,EADI,4BACuBW,IAHtB,cAElBI,EAFkB,OAKxBG,QAAQC,IAAIJ,EAASC,KAAKC,SALF,kBAMjBF,EAASC,KAAKC,SANG,gCAQxBC,QAAQC,IAAR,MARwB,yDAAH,sDAuBZM,EAAgB,mCAAG,WAAMC,GAAN,gGAELb,IAAAA,IAAA,eAA0B,CAC/Cc,OAAQ,CACNC,QAASjB,EACTe,MAAAA,KALwB,cAEtBX,EAFsB,yBAQrBA,EAASC,KAAKC,SARO,gCAU5BC,QAAQC,IAAR,MAV4B,yDAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReviewsInfo() {\n      const reviewsInfo = await fetchReviews(movieId);\n      setReviews(reviewsInfo);\n    }\n    getReviewsInfo();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length !== 0 ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '6d25a4756e0ff1ccca3eba13a74efa5c';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\nconst TRENDING = 'trending';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${TRENDING}/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const ID = Number(movieId);\n    const response = await axios.get(`${MEDIA_TYPE}/${ID}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${MEDIA_TYPE}/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${MEDIA_TYPE}/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const fetchKeywordMovie = async () => {\n//   try {\n//     const response = await axios.get(\n//       `search/${MEDIA_TYPE}?api_key=${API_KEY}&query=query&language=en-US&page=1&include_adult=false`\n//     );\n//     return response.data.results;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviews","reviewsInfo","getReviewsInfo","length","map","id","author","content","API_KEY","MEDIA_TYPE","axios","fetchTrendingMovies","response","data","results","console","log","getMovieById","ID","Number","fetchCast","cast","getMovieBySearch","query","params","api_key"],"sourceRoot":""}