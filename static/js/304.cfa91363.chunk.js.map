{"version":3,"file":"static/js/304.cfa91363.chunk.js","mappings":"8LAWaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,qKCfWC,EAAQR,EAAAA,GAAAA,GAAH,4JACP,SAAAS,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAUC,CAAtB,IACE,SAAAL,GAAC,OAAIA,EAAEC,MAAMR,MAAM,EAAlB,IACA,SAAAO,GAAC,OAAIA,EAAEC,MAAMR,MAAM,EAAlB,IACH,SAAAO,GAAC,OAAIA,EAAEC,MAAMR,MAAM,EAAlB,IACE,SAAAO,GAAC,OAAIA,EAAEC,MAAMR,MAAM,EAAlB,IAGRa,EAAOf,EAAAA,GAAAA,GAAH,gDACC,SAAAS,GAAC,OAAIA,EAAEC,MAAMR,MAAM,EAAlB,IAGNc,EAAOhB,EAAAA,GAAAA,GAAH,iEAEN,SAAAS,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,MAAnB,IAECC,GAAOlB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,iEAEN,SAAAS,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,I,mBCWZ,EA5Ba,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,0FACED,EADF,UACkBE,EAAAA,EAAAA,MADlB,8EADc,uBAAC,WAAD,wBAIdC,EACD,GAAE,KAGD,UAAC1B,EAAA,EAAD,CAAK2B,GAAG,IAAR,WACE,SAAClB,EAAD,8BACA,SAACO,EAAD,UACGM,EAAOM,KAAI,SAAAC,GACV,OACE,SAACZ,EAAD,WACE,SAACE,EAAD,CAAMW,GAAE,kBAAaD,EAAME,IAA3B,UACE,yBAAMF,EAAMG,WAFLH,EAAME,GAMpB,QAIR,C,2MC7BKE,EAAU,mCACVC,EAAa,QAInBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMV,EAAmB,mCAAG,6GAERU,IAAAA,IAAA,UANV,WAMU,YACND,EADM,YAPP,MAOO,oBAC+BD,IAHvB,cAEzBG,EAFyB,yBAKxBA,EAASC,KAAKC,SALU,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,qDAWnBC,EAAY,mCAAG,WAAMC,GAAN,yFAElBC,EAAKC,OAAOF,GAFM,SAGDP,IAAAA,IAAA,UAAaD,EAAb,YAA2BS,EAA3B,oBAAyCV,IAHxC,cAGlBG,EAHkB,yBAIjBA,EAASC,MAJQ,gCAMxBE,QAAQC,IAAR,MANwB,yDAAH,sDAUZK,EAAS,mCAAG,WAAMH,GAAN,gGAEEP,IAAAA,IAAA,UAClBD,EADkB,YACJQ,EADI,4BACuBT,IAHzB,cAEfG,EAFe,yBAKdA,EAASC,KAAKS,MALA,gCAOrBP,QAAQC,IAAR,MAPqB,yDAAH,sDAWTO,EAAY,mCAAG,WAAML,GAAN,gGAEDP,IAAAA,IAAA,UAClBD,EADkB,YACJQ,EADI,4BACuBT,IAHtB,cAElBG,EAFkB,OAKxBG,QAAQC,IAAIJ,EAASC,KAAKC,SALF,kBAMjBF,EAASC,KAAKC,SANG,gCAQxBC,QAAQC,IAAR,MARwB,yDAAH,sDAuBZQ,EAAgB,mCAAG,WAAMC,GAAN,gGAELd,IAAAA,IAAA,eAA0B,CAC/Ce,OAAQ,CACNC,QAASlB,EACTgB,MAAAA,KALwB,cAEtBb,EAFsB,yBAQrBA,EAASC,KAAKC,SARO,gCAU5BC,QAAQC,IAAR,MAV4B,yDAAH,qD","sources":["components/Box.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  typography,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  typography,\n  border,\n  position\n);\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  color: ${p => p.theme.colors.black};\n  font-size: ${p => p.theme.fontSizes.m};\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  padding-top: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const List = styled.ul`\n  padding-left: ${p => p.theme.space[5]}px;\n`;\n\nexport const Item = styled.li`\n  text-decoration: none;\n  color: ${p => p.theme.colors.orange};\n`;\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nimport { Title, List, Item, Link } from './Home.styled';\nimport { Box } from 'components/Box';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      setMovies(await fetchTrendingMovies());\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <Box px=\"5\">\n      <Title>Trending today</Title>\n      <List>\n        {movies.map(movie => {\n          return (\n            <Item key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                <div>{movie.title}</div>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '6d25a4756e0ff1ccca3eba13a74efa5c';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\nconst TRENDING = 'trending';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${TRENDING}/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const ID = Number(movieId);\n    const response = await axios.get(`${MEDIA_TYPE}/${ID}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${MEDIA_TYPE}/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${MEDIA_TYPE}/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const fetchKeywordMovie = async () => {\n//   try {\n//     const response = await axios.get(\n//       `search/${MEDIA_TYPE}?api_key=${API_KEY}&query=query&language=en-US&page=1&include_adult=false`\n//     );\n//     return response.data.results;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","color","space","layout","flexbox","typography","border","position","Title","p","theme","colors","black","fontSizes","m","List","Item","orange","Link","NavLink","useState","movies","setMovies","useEffect","fetchTrendingMovies","getMovies","px","map","movie","to","id","title","API_KEY","MEDIA_TYPE","axios","response","data","results","console","log","getMovieById","movieId","ID","Number","fetchCast","cast","fetchReviews","getMovieBySearch","query","params","api_key"],"sourceRoot":""}