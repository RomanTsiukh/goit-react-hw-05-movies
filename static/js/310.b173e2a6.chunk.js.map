{"version":3,"file":"static/js/310.b173e2a6.chunk.js","mappings":"8LAWaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,uDCFF,IAbe,WACb,OACE,SAAC,IAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAAvD,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNX,MAAM,UACNY,UAAU,wBAIjB,C,8ECdM,IAAMC,EAAW,mCACXC,EACX,2H,iMCAWC,EAAOhB,EAAAA,GAAAA,KAAH,kIAIJ,SAAAiB,GAAC,OAAIA,EAAEC,MAAMhB,MAAM,EAAlB,IACL,SAAAe,GAAC,OAAIA,EAAEC,MAAMhB,MAAM,EAAlB,IAGGiB,EAAOnB,EAAAA,GAAAA,GAAH,oSACD,SAAAiB,GAAC,OAAIA,EAAEC,MAAMhB,MAAM,EAAlB,IACE,SAAAe,GAAC,OAAIA,EAAEC,MAAMhB,MAAM,EAAlB,IACP,SAAAe,GAAC,OAAIA,EAAEC,MAAMhB,MAAM,EAAlB,IAUDkB,EAAMpB,EAAAA,GAAAA,IAAH,yC,SCwEhB,EAxFe,WAAO,IAAD,EACnB,GAAsCqB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAe,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GAErD,GAA4BX,EAAAA,EAAAA,UAAS,QAArC,eAAOY,EAAP,KAAeC,EAAf,MAOAC,EAAAA,EAAAA,YAAU,WACR,GAAwB,KAApBJ,EAAwB,CAAC,IACZK,EADW,mCAC1B,oGAEIF,EAAU,WAFd,UAG2BG,EAAAA,EAAAA,IAAiBN,GAH5C,OAGUO,EAHV,OAIIb,EAAUa,GACVJ,EAAU,YALd,gDAOIA,EAAU,YAPd,yDAD0B,qDAW1BE,GACD,CACF,GAAE,CAACL,KAEJI,EAAAA,EAAAA,YAAU,WAAM,wCAId,oGAEID,EAAU,WAFd,UAG2BG,EAAAA,EAAAA,IAAiBf,GAH5C,OAGUgB,EAHV,OAIIb,EAAUa,GACVJ,EAAU,YALd,gDAOIA,EAAU,YAPd,0DAJc,sBACTZ,GADS,mCAcdc,EACD,GAAE,CAACd,IAUJ,OACE,+BACE,0BACE,4BACE,UAACN,EAAD,CAAMuB,SAZG,SAAAC,GACfA,EAAEC,iBACF,IAxCwBC,EAwClBC,EAAaH,EAAEI,OAAOF,MAAMG,MAClCtB,EAAeoB,GAvCff,EAD6B,MADLc,EA0CNC,GAzCgB,CAAED,MAAAA,GAAU,CAAC,GA0C/CF,EAAEI,OAAOE,OACV,EAMO,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,YAAY,kBAC5C,mBAAQF,KAAK,SAAb,uBAEiB,IAAlBvB,EAAO0B,SACN,SAAC/B,EAAD,UACGK,EAAO2B,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAM5B,GAAlC,WACE,SAACT,EAAD,CACEsC,IAAKJ,EAAcxC,EAAAA,EAAWwC,EAAcvC,EAAAA,EAC5C4C,IAAKN,EACLO,QAAQ,UAEV,uBAAIP,EAAMQ,oBAPLT,EAWZ,MAGO,YAAXnB,IAAwB,SAAC6B,EAAA,EAAD,UAKlC,C,2MC3FKC,EAAU,mCACVC,EAAa,QAInBC,IAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAmB,mCAAG,6GAERD,IAAAA,IAAA,UANV,WAMU,YACND,EADM,YAPP,MAOO,oBAC+BD,IAHvB,cAEzBzB,EAFyB,yBAKxBA,EAAS6B,KAAKC,SALU,gCAO/BC,QAAQC,IAAR,MAP+B,yDAAH,qDAWnBC,EAAY,mCAAG,WAAMC,GAAN,yFAElBC,EAAKC,OAAOF,GAFM,SAGDP,IAAAA,IAAA,UAAaD,EAAb,YAA2BS,EAA3B,oBAAyCV,IAHxC,cAGlBzB,EAHkB,yBAIjBA,EAAS6B,MAJQ,gCAMxBE,QAAQC,IAAR,MANwB,yDAAH,sDAUZK,EAAS,mCAAG,WAAMH,GAAN,gGAEEP,IAAAA,IAAA,UAClBD,EADkB,YACJQ,EADI,4BACuBT,IAHzB,cAEfzB,EAFe,yBAKdA,EAAS6B,KAAKS,MALA,gCAOrBP,QAAQC,IAAR,MAPqB,yDAAH,sDAWTO,EAAY,mCAAG,WAAML,GAAN,gGAEDP,IAAAA,IAAA,UAClBD,EADkB,YACJQ,EADI,4BACuBT,IAHtB,cAElBzB,EAFkB,OAKxB+B,QAAQC,IAAIhC,EAAS6B,KAAKC,SALF,kBAMjB9B,EAAS6B,KAAKC,SANG,gCAQxBC,QAAQC,IAAR,MARwB,yDAAH,sDAuBZjC,EAAgB,mCAAG,WAAMK,GAAN,gGAELuB,IAAAA,IAAA,eAA0B,CAC/Ca,OAAQ,CACNC,QAAShB,EACTrB,MAAAA,KALwB,cAEtBJ,EAFsB,yBAQrBA,EAAS6B,KAAKC,SARO,gCAU5BC,QAAQC,IAAR,MAV4B,yDAAH,qD","sources":["components/Box.jsx","components/Loader/Loader.jsx","constants/constants.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  typography,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  typography,\n  border,\n  position\n);\n","import { ThreeDots } from 'react-loader-spinner';\nimport { Box } from 'components/Box';\n\nconst Loader = () => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        color=\"#ff4d00\"\n        ariaLabel=\"three-dots-loading\"\n      />\n    </Box>\n  );\n};\n\nexport default Loader;\n","export const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\nexport const DEFAULT_IMG =\n  'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: ${p => p.theme.space[5]}px 0;\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const List = styled.ul`\n  margin-top: ${p => p.theme.space[0]}px;\n  margin-bottom: ${p => p.theme.space[0]}px;\n  padding: ${p => p.theme.space[0]}px;\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-gap: 20px;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Img = styled.img`\n  width: 250px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieBySearch } from 'services/api';\nimport { DEFAULT_IMG, IMG_PATH } from 'constants/constants';\nimport Loader from 'components/Loader/Loader';\nimport { Form, List, Img } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const movieTitleQuery = searchParams.get('query') ?? '';\n\n  const [status, setStatus] = useState('idle');\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (movieTitleQuery !== '') {\n      async function getMovies() {\n        try {\n          setStatus('pending');\n          const response = await getMovieBySearch(movieTitleQuery);\n          setMovies(response);\n          setStatus('resolved');\n        } catch (error) {\n          setStatus('rejected');\n        }\n      }\n      getMovies();\n    }\n  }, [movieTitleQuery]);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    async function getMovies() {\n      try {\n        setStatus('pending');\n        const response = await getMovieBySearch(searchQuery);\n        setMovies(response);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n      }\n    }\n    getMovies();\n  }, [searchQuery]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const inputValue = e.target.query.value;\n    setSearchQuery(inputValue);\n    updateQueryString(inputValue);\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <div>\n        <div>\n          <Form onSubmit={onSubmit}>\n            <input type=\"text\" name=\"query\" placeholder=\"Movie search\" />\n            <button type=\"submit\">Search</button>\n          </Form>\n          {movies.length !== 0 && (\n            <List>\n              {movies.map(({ id, title, poster_path }) => {\n                return (\n                  <li key={id}>\n                    <Link to={`${id}`} state={{ from: location }}>\n                      <Img\n                        src={poster_path ? IMG_PATH + poster_path : DEFAULT_IMG}\n                        alt={title}\n                        loading=\"lazy\"\n                      />\n                      <p>{title.toUpperCase()}</p>\n                    </Link>\n                  </li>\n                );\n              })}\n            </List>\n          )}\n          {status === 'pending' && <Loader />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '6d25a4756e0ff1ccca3eba13a74efa5c';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\nconst TRENDING = 'trending';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${TRENDING}/${MEDIA_TYPE}/${TIME_WINDOW}?api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const ID = Number(movieId);\n    const response = await axios.get(`${MEDIA_TYPE}/${ID}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${MEDIA_TYPE}/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${MEDIA_TYPE}/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const fetchKeywordMovie = async () => {\n//   try {\n//     const response = await axios.get(\n//       `search/${MEDIA_TYPE}?api_key=${API_KEY}&query=query&language=en-US&page=1&include_adult=false`\n//     );\n//     return response.data.results;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Box","styled","color","space","layout","flexbox","typography","border","position","display","justifyContent","alignItems","height","width","ariaLabel","IMG_PATH","DEFAULT_IMG","Form","p","theme","List","Img","useState","searchQuery","setSearchQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","movieTitleQuery","get","status","setStatus","useEffect","getMovies","getMovieBySearch","response","onSubmit","e","preventDefault","query","inputValue","target","value","reset","type","name","placeholder","length","map","id","title","poster_path","to","state","from","src","alt","loading","toUpperCase","Loader","API_KEY","MEDIA_TYPE","axios","fetchTrendingMovies","data","results","console","log","getMovieById","movieId","ID","Number","fetchCast","cast","fetchReviews","params","api_key"],"sourceRoot":""}